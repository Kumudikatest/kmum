{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the stack for project kmum. Generated by Sigma",
  "Parameters": {
    "lambdaCodeBucketParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket containing the Lambda deployment package"
    },
    "lambdaCodeKeyParameter": {
      "Type": "String",
      "Description": "S3 key of the Lambda deployment package"
    }
  },
  "Outputs": {
    "redisKcluster": {
      "Description": "Endpoint of the ElastiCache cluster: kcluster",
      "Value": {
        "Fn::Join": [
          ":",
          [
            {
              "Fn::GetAtt": [
                "redisKcluster",
                "PrimaryEndPoint.Address"
              ]
            },
            ":",
            6379
          ]
        ]
      }
    },
    "snsKtopic": {
      "Description": "ARN of SNS topic Ktopic",
      "Value": {
        "Ref": "snsKtopic"
      }
    },
    "kmum": {
      "Description": "ARN of Lambda function kmum",
      "Value": {
        "Fn::GetAtt": [
          "kmum",
          "Arn"
        ]
      }
    }
  },
  "Resources": {
    "redisKclusterVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": "true",
        "EnableDnsSupport": "true",
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "kvpc"
          }
        ]
      }
    },
    "redisKclusterSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "redisKclusterVPC"
        },
        "CidrBlock": "10.0.0.0/20",
        "Tags": [
          {
            "Key": "Name",
            "Value": "ksubset"
          }
        ]
      }
    },
    "redisKclusterSubnetGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "kcluster subnet group",
        "SubnetIds": [
          {
            "Ref": "redisKclusterSubnet"
          }
        ]
      }
    },
    "redisKcluster": {
      "Type": "AWS::ElastiCache::ReplicationGroup",
      "Properties": {
        "AutomaticFailoverEnabled": true,
        "CacheNodeType": "cache.t2.small",
        "CacheSubnetGroupName": {
          "Ref": "redisKclusterSubnetGroup"
        },
        "Engine": "redis",
        "EngineVersion": "5.0.4",
        "NumNodeGroups": "1",
        "Port": "6379",
        "ReplicasPerNodeGroup": "2",
        "ReplicationGroupDescription": "kclustdescrp",
        "ReplicationGroupId": "kcluster",
        "SecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "redisKclusterVPC",
              "DefaultSecurityGroup"
            ]
          }
        ]
      }
    },
    "snsKtopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "kname",
        "Subscription": [
          {
            "Endpoint": "+9772445224",
            "Protocol": "sms"
          }
        ],
        "TopicName": "Ktopic"
      }
    },
    "kmum": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "kmum",
        "Description": "Invokes functions defined in kmum.js in project kmum. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "kmum.handler",
        "Timeout": 60,
        "Runtime": "nodejs14.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "kmumExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            },
            "EndPoint_redisKcluster": {
              "Fn::GetAtt": [
                "redisKcluster",
                "PrimaryEndPoint.Address"
              ]
            }
          }
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "redisKclusterVPC",
                "DefaultSecurityGroup"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "redisKclusterSubnet"
            }
          ]
        }
      }
    },
    "kmumExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "snsKtopickmumSubscription0": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "kmum",
            "Arn"
          ]
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "snsKtopic"
        }
      }
    },
    "snsKtopickmumPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "kmum"
        },
        "SourceArn": {
          "Ref": "snsKtopic"
        },
        "Principal": "sns.amazonaws.com"
      }
    }
  }
}